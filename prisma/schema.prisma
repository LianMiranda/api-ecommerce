generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model User {
  id        String    @id @default(uuid())
  fullName  String
  email     String    @unique
  password  String
  cpf       String    @unique
  birthday  String
  products  Product[]
  profile   Profile   @relation(fields: [profileId], references: [id])
  profileId String   

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Order     Orders[]
  Review    Reviews[]

  @@map("user")
}

model Profile {
  id        String   @id @default(uuid())
  profile   String
  users     User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("profile")
}

model Product {
  id          String   @id @default(uuid())
  name        String
  quantity    Int
  price       Float
  category    Category
  description String
  user        User     @relation(fields: [userId], references: [id])
  userId      String

  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  OrderItem OrderItems[]
  Review    Reviews[]

  @@map("product")
}

model Orders {
  id         String      @id @default(uuid())
  totalPrice Float
  status     OrderStatus
  user       User        @relation(fields: [userId], references: [id])
  userId     String

  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  OrderItem OrderItems[]

  @@map("orders")
}

model OrderItems {
  id        String  @id @default(uuid())
  quantity  Int
  price     Float
  order     Orders  @relation(fields: [orderId], references: [id])
  orderId   String
  product   Product @relation(fields: [productId], references: [id])
  productId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("orderitems")
}

model Reviews {
  id        String   @id @default(uuid())
  stars     Int
  content   String?
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("reviews")
}

enum Category {
  ELECTRONICS    @map("eletrônicos")
  CLOTHING       @map("roupas")
  FOOTWEAR       @map("calçados")
  HOME_APPLIANCE @map("eletrodomésticos")
  FURNITURE      @map("móveis")
  BOOKS          @map("livros")
  TOYS           @map("brinquedos")
  BEAUTY         @map("beleza e cuidados pessoais")
  SPORTS         @map("artigos esportivos")
  AUTOMOTIVE     @map("automotivo")
  PET_SUPPLIES   @map("produtos para pets")
  GROCERY        @map("alimentos e bebidas")
}

enum OrderStatus {
  PENDING   @map("pendente")
  PAID      @map("pago")
  SHIPPED   @map("enviado")
  DELIVERED @map("entregue")
  CANCELED  @map("cancelado")
}
